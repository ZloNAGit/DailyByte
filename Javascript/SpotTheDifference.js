// You are given two strings, s and t which only consist of lowercase letters. t is generated by shuffling the letters in s as well as potentially adding an additional random character.
// Return the letter that was randomly added to t if it exists, otherwise, return ’  ‘.
// Note: You may assume that at most one additional character can be added to t.
// EXAMPLES:
// s = "foobar", t = "barfoot", return 't'
// s = "ide", t = "idea", return 'a'
// s = "coding", t = "ingcod", return ''

const spotDifference = (s, t) => {
  // If s and t have the same length. No char was added
    // Return empty string
  // Initialize a count object for s
  // Initialize a count object for t
  // Iterate over t chars
    // If current char does not exist in s count object, add it
    // Otherwise increment by 1
    // Repeat for t count object
    // If current s does not include current char
      // Return that char
  // If s includes every character from t and they are not the same length. Then the added character must be a duplicate. Compare counts

  if (s.length === t.length) {
    return '';
  }

  let sCount = {};
  let tCount = {};

  for (let i = 0; i < t.length; i++) {
    if (sCount[s[i]] === undefined) {
      sCount[s[i]] = 1;
    } else {
      sCount[s[i]]++;
    }

    if (tCount[t[i]] === undefined) {
      tCount[t[i]] = 1;
    } else {
      tCount[t[i]]++;
    }

    if (!s.includes(t[i])) {
      return t[i];
    }
  }

  for (let j = 0; j < t.length; j++) {
    if (sCount[t[j]] !== tCount[t[j]]) {
      return t[j];
    }
  }
}